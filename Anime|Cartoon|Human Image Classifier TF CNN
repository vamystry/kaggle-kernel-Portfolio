{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":4643558,"sourceType":"datasetVersion","datasetId":2697895}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/suvammistry/anime-cartoon-human-image-classifier-tf-cnn?scriptVersionId=246754005\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import layers, models\nprint(f\"TensorFlow Version: {tf.__version__}\")","metadata":{"_uuid":"3418daf0-b6c8-47d9-88aa-4560ff8cedc0","_cell_guid":"90244e53-ae91-4bc1-85be-b382b7dac21b","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:03.556746Z","iopub.execute_input":"2025-04-27T07:44:03.556939Z","iopub.status.idle":"2025-04-27T07:44:21.754646Z","shell.execute_reply.started":"2025-04-27T07:44:03.55692Z","shell.execute_reply":"2025-04-27T07:44:21.75395Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stderr","text":"2025-04-27 07:44:05.226408: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1745739845.460975      31 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1745739845.529381      31 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"TensorFlow Version: 2.18.0\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"tf.config.experimental.list_physical_devices()","metadata":{"_uuid":"f294992a-2e24-445c-9607-a23e6f7501d1","_cell_guid":"b0897d52-60b8-4adf-b426-5192b51ddc66","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:21.756429Z","iopub.execute_input":"2025-04-27T07:44:21.756864Z","iopub.status.idle":"2025-04-27T07:44:21.833534Z","shell.execute_reply.started":"2025-04-27T07:44:21.756844Z","shell.execute_reply":"2025-04-27T07:44:21.832766Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"[PhysicalDevice(name='/physical_device:CPU:0', device_type='CPU'),\n PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"tf.keras.mixed_precision.set_global_policy('mixed_float16')\nprint(f'mixed precision policy: {tf.keras.mixed_precision.global_policy().name}')","metadata":{"_uuid":"de39345d-58ac-4b33-8ff9-20be2812b5f4","_cell_guid":"2dbba056-1077-43c7-9dbc-fa6fee1fa218","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:21.834239Z","iopub.execute_input":"2025-04-27T07:44:21.834514Z","iopub.status.idle":"2025-04-27T07:44:21.848349Z","shell.execute_reply.started":"2025-04-27T07:44:21.834491Z","shell.execute_reply":"2025-04-27T07:44:21.847624Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"mixed precision policy: mixed_float16\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"print('cuda' if tf.config.list_physical_devices('GPU') else 'cpu')","metadata":{"_uuid":"fa102667-03e1-4324-afea-899d513c8b1b","_cell_guid":"0f9aa256-b1ce-4b59-9eb8-128c21755aca","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:21.84923Z","iopub.execute_input":"2025-04-27T07:44:21.849503Z","iopub.status.idle":"2025-04-27T07:44:21.862401Z","shell.execute_reply.started":"2025-04-27T07:44:21.84948Z","shell.execute_reply":"2025-04-27T07:44:21.861841Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"cuda\n","output_type":"stream"}],"execution_count":4},{"cell_type":"markdown","source":"# Config. for tf.keras.utils.image_dataset_from_directory","metadata":{"_uuid":"8a43e099-3145-4f3b-9e3b-8eb1f10c4cc9","_cell_guid":"3d30ccbb-5092-42bc-8a0d-11be6efd9ec5","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"dataset_dir = '/kaggle/input/anime-vs-cartoon-vs-human/Data'\nvalidation_split = 0.3\nseed = 42\nimg_height = 128\nimg_width = 128\nbatch_size = 16\nlabel_mode = 'int'","metadata":{"_uuid":"cbb4c306-539a-4267-8d10-eacc53c7bd80","_cell_guid":"0ac59028-1a9e-43ef-b9b3-54d04a2504be","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:21.863123Z","iopub.execute_input":"2025-04-27T07:44:21.863404Z","iopub.status.idle":"2025-04-27T07:44:21.877951Z","shell.execute_reply.started":"2025-04-27T07:44:21.86338Z","shell.execute_reply":"2025-04-27T07:44:21.87721Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":5},{"cell_type":"markdown","source":"# Converting dataset from local directory into tensorflow.data.Dataset class","metadata":{"_uuid":"efec8ea4-d2d1-41c0-b1dd-228e7ffbb53b","_cell_guid":"3064dccc-2cf5-4155-ba56-1cc9f9faf2cc","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"train = tf.keras.utils.image_dataset_from_directory(\n    dataset_dir,\n    validation_split = validation_split,\n    subset = 'training',\n    seed = seed,\n    image_size = (img_height,img_width),\n    batch_size = batch_size,\n    label_mode = label_mode\n)\n\nval = tf.keras.utils.image_dataset_from_directory(\n    dataset_dir,\n    validation_split = validation_split,\n    subset = 'validation',\n    seed = seed,\n    image_size = (img_height,img_width),\n    batch_size = batch_size,\n    label_mode = label_mode\n)","metadata":{"_uuid":"09c485a7-0edd-4751-baf6-d60b816b7fc0","_cell_guid":"97d1ca37-206f-4f0d-bf3e-a0a584f09d9c","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:21.87871Z","iopub.execute_input":"2025-04-27T07:44:21.879017Z","iopub.status.idle":"2025-04-27T07:44:30.992726Z","shell.execute_reply.started":"2025-04-27T07:44:21.879Z","shell.execute_reply":"2025-04-27T07:44:30.992024Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"Found 8917 files belonging to 3 classes.\nUsing 6242 files for training.\n","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1745739866.929428      31 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 15513 MB memory:  -> device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:00:04.0, compute capability: 6.0\n","output_type":"stream"},{"name":"stdout","text":"Found 8917 files belonging to 3 classes.\nUsing 2675 files for validation.\n","output_type":"stream"}],"execution_count":6},{"cell_type":"markdown","source":"# checking image classes in dataset subsets","metadata":{"_uuid":"ec5e4f97-3a91-497a-9c00-77da19e3c497","_cell_guid":"014304e2-61ce-4365-b3ba-d50bf652c827","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"print(f'train label class: {train.class_names}, val label class: {val.class_names} \\nnumber of label classes: {len(train.class_names)}')","metadata":{"_uuid":"066fb71e-d559-403b-a953-7f519c5f503f","_cell_guid":"05e43859-9fb4-49bf-b021-fd43b1427220","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:30.994973Z","iopub.execute_input":"2025-04-27T07:44:30.995184Z","iopub.status.idle":"2025-04-27T07:44:30.999211Z","shell.execute_reply.started":"2025-04-27T07:44:30.995167Z","shell.execute_reply":"2025-04-27T07:44:30.998458Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"train label class: ['anime', 'cartoon', 'human'], val label class: ['anime', 'cartoon', 'human'] \nnumber of label classes: 3\n","output_type":"stream"}],"execution_count":7},{"cell_type":"markdown","source":"# Checking batch in dataset subsets","metadata":{"_uuid":"dabc258a-6921-472a-a937-79e5d7c78187","_cell_guid":"e628d4e2-a90a-44f9-abc8-6d0b9f98dcae","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"for image, label in train:\n    print(f'image batch: {image}, label batch: {label}')\n    break","metadata":{"_uuid":"656beef7-041f-4148-9415-5f327e9975eb","_cell_guid":"94c4e2b4-cfde-4b28-8986-c3deb343c172","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:30.999979Z","iopub.execute_input":"2025-04-27T07:44:31.000173Z","iopub.status.idle":"2025-04-27T07:44:31.377673Z","shell.execute_reply.started":"2025-04-27T07:44:31.000157Z","shell.execute_reply":"2025-04-27T07:44:31.376683Z"},"_kg_hide-output":true,"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"image batch: [[[[ 46.8125      64.19922     78.84375   ]\n   [ 46.8125      64.19922     78.84375   ]\n   [ 46.8125      64.19922     78.84375   ]\n   ...\n   [ 45.380753    68.45334     83.10547   ]\n   [ 44.003906    63.390625    75.90625   ]\n   [ 92.72797     94.395935    99.177185  ]]\n\n  [[  5.          25.          44.        ]\n   [  5.          25.          44.        ]\n   [  5.          25.          44.        ]\n   ...\n   [  3.          31.513992    47.622726  ]\n   [  2.9648438   24.504105    40.890823  ]\n   [ 60.375       62.914062    68.56641   ]]\n\n  [[  5.          25.          44.        ]\n   [  5.          25.          44.        ]\n   [  5.          25.          44.        ]\n   ...\n   [  2.579544    30.204544    44.451706  ]\n   [  6.9205933   26.165695    43.68686   ]\n   [ 60.375       62.914062    68.56641   ]]\n\n  ...\n\n  [[  5.2860107   45.02124     63.29077   ]\n   [  0.37010193  50.907883    67.21158   ]\n   [  4.330963    54.08452     70.63316   ]\n   ...\n   [  8.420456    33.86577     56.5103    ]\n   [  7.6445312   33.089844    56.021805  ]\n   [ 59.470596    67.736435    75.367615  ]]\n\n  [[  7.880142    22.33554     41.053055  ]\n   [  5.4021454   24.331833    38.331833  ]\n   [  9.437851    28.157883    42.983734  ]\n   ...\n   [  5.946945    26.786789    46.333664  ]\n   [  5.1601562   26.          45.859573  ]\n   [ 59.462173    63.3748      67.72246   ]]\n\n  [[223.55695    225.13857    227.58778   ]\n   [223.26439    225.50514    227.30983   ]\n   [224.0066     225.99055    227.83452   ]\n   ...\n   [222.72862    225.56456    227.88487   ]\n   [222.64453    225.48047    227.80078   ]\n   [229.80739    230.13922    230.59996   ]]]\n\n\n [[[124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   ...\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]]\n\n  [[124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   ...\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]]\n\n  [[124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   ...\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]\n   [124.         208.          94.        ]]\n\n  ...\n\n  [[255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   ...\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]]\n\n  [[255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   ...\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]]\n\n  [[255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   ...\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]\n   [255.         255.         255.        ]]]\n\n\n [[[255.         253.         255.        ]\n   [255.         253.         255.        ]\n   [255.         253.         255.        ]\n   ...\n   [ 67.74219     81.16406    150.95312   ]\n   [ 74.44531     88.89844    158.17188   ]\n   [ 78.          93.         162.        ]]\n\n  [[254.72656    252.45312    255.        ]\n   [254.72656    252.5279     255.        ]\n   [254.72656    252.66888    255.        ]\n   ...\n   [ 66.445496    79.59393    149.92987   ]\n   [ 71.315735    85.49542    155.31573   ]\n   [ 73.89844     88.625      158.17188   ]]\n\n  [[254.21094    251.42188    255.        ]\n   [254.21094    251.63763    255.        ]\n   [254.21094    252.0445     255.        ]\n   ...\n   [ 64.000305    76.63312    148.0003    ]\n   [ 65.414246    79.07831    149.92987   ]\n   [ 66.16406     80.375      150.95312   ]]\n\n  ...\n\n  [[254.         255.         255.        ]\n   [254.21576    255.         255.        ]\n   [254.62262    255.         255.        ]\n   ...\n   [ 30.119568    34.49695     78.864136  ]\n   [ 49.604553    55.420044   100.30286   ]\n   [ 59.9375      66.515625   111.671875  ]]\n\n  [[254.         255.         255.        ]\n   [254.07477    255.         255.        ]\n   [254.21576    255.         255.        ]\n   ...\n   [ 18.151428    21.904419    64.20911   ]\n   [ 37.370544    42.295776    85.11609   ]\n   [ 47.5625      53.109375    96.203125  ]]\n\n  [[254.         255.         255.        ]\n   [254.         255.         255.        ]\n   [254.         255.         255.        ]\n   ...\n   [ 11.8046875   15.2265625   56.4375    ]\n   [ 30.882812    35.335938    77.0625    ]\n   [ 41.          46.          88.        ]]]\n\n\n ...\n\n\n [[[223.         143.5        207.        ]\n   [216.5        177.5        241.        ]\n   [212.25       196.75       246.75      ]\n   ...\n   [210.75       203.75       250.        ]\n   [210.75       204.25       250.        ]\n   [211.         204.5        251.25      ]]\n\n  [[225.75        60.25       108.75      ]\n   [224.75       110.25       166.75      ]\n   [223.         160.25       227.75      ]\n   ...\n   [210.25       206.5        251.25      ]\n   [211.5        206.         252.5       ]\n   [211.25       206.75       252.5       ]]\n\n  [[221.75        36.5         90.25      ]\n   [225.5         45.75        99.25      ]\n   [228.5         92.         141.5       ]\n   ...\n   [213.25       206.25       253.5       ]\n   [213.5        206.75       251.5       ]\n   [212.5        206.25       250.5       ]]\n\n  ...\n\n  [[239.5        186.25       167.        ]\n   [240.75       187.75       169.5       ]\n   [238.75       189.25       171.        ]\n   ...\n   [220.25       213.5        254.25      ]\n   [219.5        212.5        254.        ]\n   [219.         212.75       254.25      ]]\n\n  [[229.25       202.5        225.        ]\n   [231.         200.75       220.75      ]\n   [232.75       199.25       215.        ]\n   ...\n   [219.75       213.         254.        ]\n   [219.25       212.25       254.        ]\n   [219.         212.5        254.        ]]\n\n  [[223.75       213.5        250.        ]\n   [224.25       214.75       251.25      ]\n   [225.         215.25       251.75      ]\n   ...\n   [219.25       212.75       254.25      ]\n   [219.5        212.25       254.25      ]\n   [221.25       213.75       254.75      ]]]\n\n\n [[[  3.           3.           3.        ]\n   [  3.5          3.5          3.5       ]\n   [  3.5          3.5          3.5       ]\n   ...\n   [  8.5          7.5          5.5       ]\n   [  8.75         7.75         5.75      ]\n   [ 10.25         9.25         7.25      ]]\n\n  [[  3.           3.           3.        ]\n   [  2.5          2.5          2.5       ]\n   [  3.5          3.5          3.5       ]\n   ...\n   [  9.5          8.5          6.5       ]\n   [  9.           8.           6.        ]\n   [  9.75         8.75         6.75      ]]\n\n  [[  3.5          3.5          3.5       ]\n   [  3.25         3.25         3.25      ]\n   [  3.25         3.25         3.25      ]\n   ...\n   [ 10.25         9.25         7.25      ]\n   [  9.75         8.75         6.75      ]\n   [  9.5          8.5          6.5       ]]\n\n  ...\n\n  [[136.5         63.5         39.75      ]\n   [143.5         71.5         47.        ]\n   [145.75        75.75        49.75      ]\n   ...\n   [ 17.75        16.75        14.75      ]\n   [ 16.75        15.75        13.75      ]\n   [ 17.5         16.5         14.5       ]]\n\n  [[151.75        80.75        54.25      ]\n   [142.25        70.25        46.        ]\n   [141.75        69.75        45.75      ]\n   ...\n   [ 18.25        17.25        15.25      ]\n   [ 17.25        16.25        14.25      ]\n   [ 16.5         15.5         13.5       ]]\n\n  [[154.75        81.75        53.        ]\n   [150.75        79.25        52.        ]\n   [149.5         75.5         50.5       ]\n   ...\n   [ 18.5         17.5         15.5       ]\n   [ 17.25        16.25        14.25      ]\n   [ 16.5         15.5         13.5       ]]]\n\n\n [[[ 14.75       105.75       200.75      ]\n   [ 23.25       137.5        204.        ]\n   [ 26.75       147.75       198.75      ]\n   ...\n   [ 18.25       108.25       204.25      ]\n   [ 18.         111.5        204.        ]\n   [ 18.         106.75       202.5       ]]\n\n  [[ 19.75       105.25       201.        ]\n   [ 22.5        115.75       205.        ]\n   [ 35.75       146.75       201.75      ]\n   ...\n   [ 16.75       104.5        206.        ]\n   [ 17.25       107.75       204.        ]\n   [ 19.25       107.         203.        ]]\n\n  [[ 20.5        107.         199.5       ]\n   [ 15.75       104.25       199.5       ]\n   [ 17.25       127.25       203.5       ]\n   ...\n   [ 18.75       107.5        205.75      ]\n   [ 18.5        108.75       204.5       ]\n   [ 16.75       105.25       202.        ]]\n\n  ...\n\n  [[ 15.         107.         194.25      ]\n   [ 17.5        106.25       192.25      ]\n   [ 17.75        99.5        185.75      ]\n   ...\n   [ 27.5         32.75        28.75      ]\n   [ 26.25        32.75        28.75      ]\n   [ 25.75        30.          26.        ]]\n\n  [[ 16.75       101.25       191.5       ]\n   [ 15.25        98.75       186.75      ]\n   [ 15.5         99.75       191.        ]\n   ...\n   [ 28.25        31.75        28.5       ]\n   [ 25.75        32.5         30.        ]\n   [ 28.          32.          28.25      ]]\n\n  [[ 17.75        98.25       189.75      ]\n   [ 17.          96.         188.25      ]\n   [ 12.25        95.         190.5       ]\n   ...\n   [ 30.5         35.75        31.75      ]\n   [ 29.75        34.75        28.75      ]\n   [ 27.75        30.          27.        ]]]], label batch: [1 1 0 1 1 0 2 0 2 2 0 2 1 2 2 2]\n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"# autotune","metadata":{}},{"cell_type":"code","source":"autotune  = tf.data.AUTOTUNE\ntrain = train.cache().prefetch(buffer_size = autotune)\nval = val.cache().prefetch(buffer_size = autotune)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-27T07:44:31.378586Z","iopub.execute_input":"2025-04-27T07:44:31.378875Z","iopub.status.idle":"2025-04-27T07:44:31.394323Z","shell.execute_reply.started":"2025-04-27T07:44:31.378856Z","shell.execute_reply":"2025-04-27T07:44:31.393503Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"# Image data augmentation","metadata":{"_uuid":"3318a5c0-8a92-4e07-9138-95c1a66f4f5f","_cell_guid":"0dd681b5-54b9-42a4-a2ae-d69f932b05cd","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"image_augmentation = tf.keras.Sequential([\n    layers.RandomFlip('horizontal_and_vertical'),\n    layers.RandomRotation(0.2),\n    layers.RandomZoom(0.2),\n    layers.RandomBrightness(0.15),\n    layers.RandomContrast(0.15),\n    #layers.RandomTranslation(height_factor=0.1,width_factor=0.1),\n    #layers.RandomHeight(0.1),\n    #layers.RandomWidth(0.1)\n    \n])","metadata":{"_uuid":"3630e202-ad50-4251-94f9-b91427038e4f","_cell_guid":"b6331936-8ae4-4ae8-8536-fa257fc14565","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:31.395221Z","iopub.execute_input":"2025-04-27T07:44:31.395517Z","iopub.status.idle":"2025-04-27T07:44:31.416272Z","shell.execute_reply.started":"2025-04-27T07:44:31.395472Z","shell.execute_reply":"2025-04-27T07:44:31.415663Z"},"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"# Building CNN model","metadata":{"_uuid":"3b9ee7e6-6b4f-480d-bbf1-55d124571a87","_cell_guid":"0d66907c-4391-436d-8ceb-0bac665e7e8a","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"cnn_model = models.Sequential([\n    layers.Rescaling(1./255, input_shape =(128,128,3)),\n    image_augmentation,\n    layers.Conv2D(16,(3,3),padding = 'same', activation = 'relu'),\n    layers.MaxPooling2D((2,2)),\n    layers.Conv2D(32,(3,3),padding = 'same', activation = 'relu'),\n    layers.MaxPooling2D((2,2)),\n    layers.Conv2D(64,(3,3),padding = 'same', activation = 'relu'),\n    layers.MaxPooling2D((2,2)),\n    layers.GlobalAveragePooling2D(),\n    layers.Dense(64, activation = 'relu'),\n    layers.Dropout(0.4),\n    layers.Dense(3,activation= None, dtype = 'float32'),\n    layers.Activation('softmax',dtype = 'float32')\n    \n])\n\noptimizer = tf.keras.optimizers.Adam(learning_rate = 1e-3)\n\ncnn_model.compile(optimizer= optimizer,\n            loss='sparse_categorical_crossentropy',\n            metrics = ['accuracy'])\n\ncnn_model.summary()","metadata":{"_uuid":"d34566c2-9aab-42d0-80d9-1a026ea3d813","_cell_guid":"fe74b5f3-6a38-4acb-867b-c1d3e7c61c6f","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:31.417011Z","iopub.execute_input":"2025-04-27T07:44:31.417375Z","iopub.status.idle":"2025-04-27T07:44:32.253816Z","shell.execute_reply.started":"2025-04-27T07:44:31.417354Z","shell.execute_reply":"2025-04-27T07:44:32.253253Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/layers/preprocessing/tf_data_layer.py:19: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(**kwargs)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_1\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_1\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ rescaling (\u001b[38;5;33mRescaling\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m3\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ sequential (\u001b[38;5;33mSequential\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m3\u001b[0m)         │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m128\u001b[0m, \u001b[38;5;34m16\u001b[0m)        │             \u001b[38;5;34m448\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m, \u001b[38;5;34m64\u001b[0m, \u001b[38;5;34m16\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m, \u001b[38;5;34m64\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │           \u001b[38;5;34m4,640\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m, \u001b[38;5;34m32\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_2 (\u001b[38;5;33mConv2D\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m, \u001b[38;5;34m32\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │          \u001b[38;5;34m18,496\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_2 (\u001b[38;5;33mMaxPooling2D\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m16\u001b[0m, \u001b[38;5;34m16\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ global_average_pooling2d             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │               \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mGlobalAveragePooling2D\u001b[0m)             │                             │                 │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │           \u001b[38;5;34m4,160\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)                  │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m)                   │             \u001b[38;5;34m195\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ activation (\u001b[38;5;33mActivation\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m)                   │               \u001b[38;5;34m0\u001b[0m │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ rescaling (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Rescaling</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)         │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ sequential (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Sequential</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)         │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">448</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)          │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,640</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)          │          <span style=\"color: #00af00; text-decoration-color: #00af00\">18,496</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)          │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ global_average_pooling2d             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling2D</span>)             │                             │                 │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,160</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)                  │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">195</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ activation (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                   │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m27,939\u001b[0m (109.14 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">27,939</span> (109.14 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m27,939\u001b[0m (109.14 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">27,939</span> (109.14 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":11},{"cell_type":"markdown","source":"# Training model","metadata":{"_uuid":"bdd780fd-cd00-48ae-a4a0-81db523f9be4","_cell_guid":"3ff3836c-cd1d-4e70-89c5-d002c4427c69","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}}},{"cell_type":"code","source":"callbacks = [\n    tf.keras.callbacks.EarlyStopping(monitor = 'val_accuracy',\n                                     patience = 7, restore_best_weights = True,\n                                    verbose = 1),\n    tf.keras.callbacks.ReduceLROnPlateau(monitor = 'val_loss',\n                                         factor = 0.3, patience = 3, min_lr = 1e-7,\n                                        verbose = 1),\n    tf.keras.callbacks.ModelCheckpoint('best_model.keras',\n                                       monitor = 'val_accuracy',save_best_only = True,\n                                      verbose = 1)\n]\n\ncnn_model.fit(train,validation_data = val,epochs = 25, callbacks = callbacks, verbose = 1)","metadata":{"_uuid":"a1864fc4-fd92-44c7-a870-1861a2eb0bd4","_cell_guid":"8a190c1e-452f-4529-8d33-488b346a331e","trusted":true,"collapsed":false,"execution":{"iopub.status.busy":"2025-04-27T07:44:32.254506Z","iopub.execute_input":"2025-04-27T07:44:32.254748Z","iopub.status.idle":"2025-04-27T07:45:50.885235Z","shell.execute_reply.started":"2025-04-27T07:44:32.254722Z","shell.execute_reply":"2025-04-27T07:45:50.884631Z"},"jupyter":{"outputs_hidden":false}},"outputs":[{"name":"stdout","text":"Epoch 1/25\n","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1745739877.716684      93 cuda_dnn.cc:529] Loaded cuDNN version 90300\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 82ms/step - accuracy: 0.3386 - loss: 1.1765\nEpoch 1: val_accuracy improved from -inf to 0.33458, saving model to best_model.keras\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m52s\u001b[0m 116ms/step - accuracy: 0.3386 - loss: 1.1764 - val_accuracy: 0.3346 - val_loss: 1.0983 - learning_rate: 0.0010\nEpoch 2/25\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.3288 - loss: 1.0998\nEpoch 2: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 9ms/step - accuracy: 0.3288 - loss: 1.0998 - val_accuracy: 0.3346 - val_loss: 1.0983 - learning_rate: 0.0010\nEpoch 3/25\n\u001b[1m387/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.3353 - loss: 1.1005\nEpoch 3: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 10ms/step - accuracy: 0.3353 - loss: 1.1005 - val_accuracy: 0.3346 - val_loss: 1.0994 - learning_rate: 0.0010\nEpoch 4/25\n\u001b[1m390/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.3322 - loss: 1.0992\nEpoch 4: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n\nEpoch 4: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 10ms/step - accuracy: 0.3322 - loss: 1.0992 - val_accuracy: 0.3346 - val_loss: 1.0988 - learning_rate: 0.0010\nEpoch 5/25\n\u001b[1m389/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.3268 - loss: 1.0992\nEpoch 5: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 10ms/step - accuracy: 0.3268 - loss: 1.0992 - val_accuracy: 0.3346 - val_loss: 1.0986 - learning_rate: 3.0000e-04\nEpoch 6/25\n\u001b[1m386/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.3310 - loss: 1.0988\nEpoch 6: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 9ms/step - accuracy: 0.3311 - loss: 1.0988 - val_accuracy: 0.3346 - val_loss: 1.0986 - learning_rate: 3.0000e-04\nEpoch 7/25\n\u001b[1m390/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.3399 - loss: 1.0985\nEpoch 7: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n\nEpoch 7: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 10ms/step - accuracy: 0.3399 - loss: 1.0985 - val_accuracy: 0.3346 - val_loss: 1.0985 - learning_rate: 3.0000e-04\nEpoch 8/25\n\u001b[1m390/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.3360 - loss: 1.0987\nEpoch 8: val_accuracy did not improve from 0.33458\n\u001b[1m391/391\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 9ms/step - accuracy: 0.3360 - loss: 1.0987 - val_accuracy: 0.3346 - val_loss: 1.0984 - learning_rate: 9.0000e-05\nEpoch 8: early stopping\nRestoring model weights from the end of the best epoch: 1.\n","output_type":"stream"},{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7e8c3ec46f10>"},"metadata":{}}],"execution_count":12}]}